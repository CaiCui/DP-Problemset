//hdu1723 Distribute Message 一维动态规划,
///分析：第一道题被我想复杂了，一直尝试二维解决，其实思路就是从无到有，一点一点递进
///因为可走步数只能为1...m,所以从最小的1开始，尝试1..m记录下来，然后是2，每次加和的时候其实
///又用到了前面的结果，即每次只解决当前能走的可能性有多少，知道最后，结果累加起来，就得出最终能走的方法有多少。
#include <iostream>
#include<cstring>
using namespace std;
int main()
{
  int a[50];
   int n,m;
   int i,j;
     while(cin>>n>>m && (n||m))
     {
         memset(a,0,sizeof(a));
          a[1]=1;
          for(i=1;i<=n;i++)
            for(j=1;j<=m;j++)
            if(i+j<=n)
              a[i+j]=a[i+j]+a[i];//从i到目标i+j的方法数+1到i的方法数
          cout<<a[n]<<endl;
     }
    return 0;
}
/*
Distribute Message

Time Limit: 1000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 1559    Accepted Submission(s): 740


Problem Description
The contest’s message distribution is a big thing in prepare. Assuming N students stand in a row, from the row-head start transmit message, each person can transmit message to behind M personals, and how many ways could row-tail get the message?


Input
Input may contain multiple test cases. Each case contains N and M in one line. (0<=M<N<=30)
When N=0 and M=0, terminates the input and this test case is not to be processed.


Output
Output the ways of the Nth student get message.


Sample Input
4 1
4 2
0 0


Sample Output
1
3

Hint
4 1 : A->B->C->D
4 2 : A->B->C->D, A->C->D, A->B->D

*/
